---
import { fetch } from 'undici';
import QRCode from 'qrcode';


export async function getStaticPaths() {
  const res = await fetch('https://api.austinandryan.io/api/wendal-users?populate=profile_picture'); // https://developer.mozilla.org/en-US/docs/Web/API/Response/json_static
  if (!res.ok) {
    throw new Error(`Failed to fetch profiles: ${res.status} ${res.statusText}`);
  }

  const data = await res.json();
  if (!data.data || data.data.length === 0) {   // the second "data" attribute is from our own API response structure. by default, strapi nests the actual data inside a "data" attribute even though the astro docs use "results"
    throw new Error('No users found');
  }
  console.log(data);

  return data.data.map((user) => ({
    params: { slug: user.slug },
  }));
}

/* Outside of the getStaticPaths function */
const { slug } = Astro.params;
const qr = await QRCode.toDataURL(`https://austinandryan.io/p/${slug}`);

const res = await fetch(`https://api.austinandryan.io/api/wendal-users?filters[slug][$eq]=${slug}&populate=profile_picture`);
if (!res.ok) {
  throw new Error(`Failed to fetch profile: ${res.status} ${res.statusText}`);
}

const data = await res.json();
if (!data.data || data.data.length === 0) {   // the second "data" attribute is from our own API response structure. by default, strapi nests the actual data inside a "data" attribute even though the astro docs use "results"
    throw new Error('No users found');
}

const profile = data.data[0]; // since we are filtering by slug, we expect only one result
---
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>{profile.full_name} | Austin & Ryan</title>
  </head>
  <body class="bg-gray-100 text-gray-800">
    <main class="max-w-sm mx-auto mt-8 p-4 bg-white rounded-lg shadow">
      <div class="flex flex-col items-center">
        <img
          src={profile.profile_picture?.data?.attributes?.url}
          alt={profile.full_name}
          class="w-28 h-28 rounded-full object-cover mb-3 shadow-sm"
        />
        <h1 class="text-xl font-semibold">{profile.full_name}</h1>
        <p class="text-sm text-gray-500">{profile.location}</p>
      </div>

      <div class="mt-4 space-y-1 text-sm text-gray-700">
        <div class="flex justify-between">
          <span class="font-medium">Needs:</span>
          <span>{profile.needs}</span>
        </div>
        <div class="flex justify-between">
          <span class="font-medium">Last Verified:</span>
          <span>{new Date(profile.last_verified).toLocaleDateString()}</span>
        </div>
      </div>

      <div class="mt-5 text-center">
        <a
          href={`/donate/${slug}`}
          class="inline-block px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition"
        >
          Support {profile.full_name.split(' ')[0]}
        </a>
      </div>

      <div class="mt-6 flex justify-center">
        <img src={qr} alt="QR code for profile" class="w-24 h-24" />
      </div>
    </main>
  </body>
</html>
